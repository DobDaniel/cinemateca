{"version":3,"sources":["components/HomeLink.js","components/Details.js","components/Movie.js","components/DetailsPerson.js","components/DetailsShow.js","components/Popular.js","components/SearchView.js","components/SearchBar.js","components/MainView.js","App.js","index.js"],"names":["HomeLink","className","to","APIURL","APIKEY","Details","match","useState","movie","setMovie","actors","setActors","director","setDirector","currentMovieID","params","movieID","a","url","fetch","resp","json","respJson","cast","len","Object","keys","length","i","crew","job","useEffect","getMovie","getActors","getDirector","onClick","window","history","back","src","poster_path","title","overview","id","name","map","actor","vote_average","class","newUrl","replace","open","focus","Movie","movies","addDefaultSrc","e","target","onerror","getLink","profile_path","video","onError","DetailsPerson","person","setPerson","credits","setCredits","bests","setBests","currentPersonID","personID","sortListAverage","list","j","vote_count","temp","sortListPop","popularity","ID","oldbio","biography","newbio","shortenBio","console","log","crewLen","castLen","bio","con","last","slice","getPerson","getCredits","getBests","DetailsShow","show","setShow","currentShowID","showID","getShow","Popular","setMovies","sortList","number_votes","results","getMovies","SearchView","popular","SearchBar","search","setSearch","active","setActive","URL","action","method","htmlFor","type","placeholder","value","onChange","MainView","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.210c05e5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./HomeLink.css\"\r\nconst HomeLink = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"link-wrap\">\r\n                <Link className=\"link-home\" to={`/`}>\r\n                    <p>cinemateca</p>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomeLink;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useFetch } from \"react-hooks-fetch\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Details.css\";\r\nimport HomeLink from \"./HomeLink\";\r\nconst IMGPATH = \"https://image.tmdb.org/t/p/w1280\";\r\nconst APIURL = \"https://api.themoviedb.org/3/movie/\";\r\nconst APIKEY = \"?api_key=04c35731a5ee918f014970082a0088b1&page=1\";\r\nconst Details = ({ match }) => {\r\n    const [movie, setMovie] = useState({});\r\n    const [actors, setActors] = useState({});\r\n    const [director, setDirector] = useState(\"\");\r\n    const currentMovieID = match.params.movieID;\r\n    const options = {};\r\n\r\n    // var actors = {};\r\n    function streamMovie() {\r\n        let url = \"https://dogeflix.net/newmov.php?menu=search&query=\";\r\n        let title = movie.title;\r\n        let modTitle = title.replace(/ /g, \"+\");\r\n        let newUrl = url + modTitle;\r\n        window.open(newUrl, \"_blank\").focus();\r\n    }\r\n    async function getMovie() {\r\n        const url = APIURL + currentMovieID + APIKEY;\r\n        const resp = await fetch(url);\r\n        const respJson = await resp.json();\r\n        setMovie(respJson);\r\n    }\r\n    async function getActors() {\r\n        const url = APIURL + currentMovieID + \"/credits\" + APIKEY;\r\n        const resp = await fetch(url);\r\n        const respJson = await resp.json();\r\n        const cast = respJson.cast;\r\n        var len = Object.keys(cast).length;\r\n        for (let i = 4; i < len; i++) {\r\n            delete cast[i];\r\n        }\r\n\r\n        setActors(cast);\r\n    }\r\n    async function getDirector() {\r\n        const url = APIURL + currentMovieID + \"/credits\" + APIKEY;\r\n        const resp = await fetch(url);\r\n\r\n        const respJson = await resp.json();\r\n\r\n        const crew = respJson.crew;\r\n        var len = Object.keys(crew).length;\r\n        var director;\r\n        for (let i = 0; i < len; i++) {\r\n            if ((crew[i].job = \"Director\")) {\r\n                director = crew[i];\r\n                break;\r\n            }\r\n        }\r\n        setDirector(director);\r\n    }\r\n\r\n    let isgood = false;\r\n    useEffect(() => {\r\n        getMovie();\r\n        getActors();\r\n        getDirector();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <HomeLink/>\r\n            <div className=\"detail-wrapper\">\r\n                <button\r\n                    className=\"detail-button\"\r\n                    onClick={() => window.history.back()}\r\n                >\r\n                    {\" \"}\r\n                    &#8592;{\" \"}\r\n                </button>\r\n                <div className=\"movie-layout\">\r\n                    <div className=\"detail-movie-poster\">\r\n                        <img\r\n                            className=\"detail-movie-image\"\r\n                            src={IMGPATH + movie.poster_path}\r\n                        />\r\n                    </div>\r\n                    <div className=\"movie-info\">\r\n                        <p className=\"movie-title\">{movie.title}</p>\r\n                        <div className=\"movie-overview\">\r\n                            <p>{movie.overview}</p>\r\n                        </div>\r\n                        <div className=\"bottom-part\">\r\n                            <div className=\"movie-crew\">\r\n                                <div className=\"directors\">\r\n                                    <p className=\"director\">\r\n                                        Directed by:\r\n                                        <Link\r\n                                            className=\"director-link\"\r\n                                            to={`/person/${director.id}`}\r\n                                        >\r\n                                            {\" \" + director.name}\r\n                                        </Link>\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"actors\">\r\n                                    <p className=\"actors\">\r\n                                        Actors:\r\n                                        {Object.keys(actors).length !== 0 &&\r\n                                            actors.map((actor) => (\r\n                                                <Link\r\n                                                    className=\"actor-link\"\r\n                                                    to={`/person/${actor.id}`}\r\n                                                >\r\n                                                    <p className=\"actor-link-text\">\r\n                                                        {actor.name}\r\n                                                    </p>\r\n                                                </Link>\r\n                                            ))}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"bottom-end\">\r\n                                <div className=\"movie-vote\">\r\n                                    <p className=\"movie-vote-text\">\r\n                                        {movie.vote_average}\r\n                                    </p>\r\n                                </div>\r\n                                <button\r\n                                    class=\"stream-button\"\r\n                                    onClick={streamMovie}\r\n                                >\r\n                                    Stream Now\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Details;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Movie.css\";\r\nimport failedIMG from \"../assets/failedIMG.jpg\";\r\nconst IMGPATH = \"https://image.tmdb.org/t/p/w1280\";\r\nconst Movie = ({ movies }) => {\r\n    function addDefaultSrc(e) {\r\n        e.target.src =\r\n            \"https://www.vinelanddriveintheater.com/assets/admin/img/addmovie.jpg\";\r\n        e.target.onerror = null;\r\n    }\r\n    function getLink(movie) {\r\n        if (movie.profile_path) return `/person/${movie.id}`;\r\n        else if (movie.video != null) return `/movie/${movie.id}`;\r\n        else return `/show/${movie.id}`;\r\n    }\r\n    return (\r\n        <div className=\"movie-wrapper\">\r\n            <div className=\"movie-grid\">\r\n                {movies &&\r\n                    movies.map((movie) => (\r\n                        <div className=\"movie-container\" key={movie.id}>\r\n                            {/* <div className=\"movie-info\">\r\n                            <p>{movie.title}</p>\r\n                        </div> */}\r\n                            <div className=\"movie-poster\">\r\n                                <Link to={getLink(movie)}>\r\n                                    <img\r\n                                        className=\"movie-image\"\r\n                                        src={\r\n                                            IMGPATH +\r\n                                            (movie.poster_path ||\r\n                                                movie.profile_path)\r\n                                        }\r\n                                        onError={addDefaultSrc}\r\n                                    />\r\n                                </Link>\r\n                            </div>\r\n                            {/* <div className=\"movie-overview\">\r\n                            <p>{movie.overview}</p>\r\n                        </div>\r\n                        <div className=\"movie-vote\">\r\n                            <p>{movie.vote_average}</p>\r\n                        </div> */}\r\n                        </div>\r\n                    ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Movie;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"./DetailsPerson.css\";\r\nimport HomeLink from \"./HomeLink\";\r\nimport Movie from \"./Movie\";\r\nconst IMGPATH = \"https://image.tmdb.org/t/p/w1280\";\r\nconst APIURL = \"https://api.themoviedb.org/3/person/\";\r\nconst APIKEY = \"?api_key=04c35731a5ee918f014970082a0088b1&page=1\";\r\nconst DetailsPerson = ({ match }) => {\r\n    const [person, setPerson] = useState({});\r\n    const [credits, setCredits] = useState([]);\r\n    const [bests, setBests] = useState([]);\r\n    const currentPersonID = match.params.personID;\r\n    function sortListAverage(list) {\r\n        if (!list) return;\r\n        for (let i = 0; i < 20; i++)\r\n            for (let j = i + 1; j < 20; j++) {\r\n                if (\r\n                    list[i] &&\r\n                    list[j] &&\r\n                    list[i].vote_average * list[i].vote_count <\r\n                        list[j].vote_average * list[j].vote_count\r\n                ) {\r\n                    let temp = list[i];\r\n                    list[i] = list[j];\r\n                    list[j] = temp;\r\n                }\r\n            }\r\n    }\r\n    function sortListPop(list) {\r\n        if (!list) return;\r\n        for (let i = 0; i < 20; i++)\r\n            for (let j = i + 1; j < 20; j++) {\r\n                if (\r\n                    list[i] &&\r\n                    list[j] &&\r\n                    list[i].popularity < list[j].popularity\r\n                ) {\r\n                    let temp = list[i];\r\n                    list[i] = list[j];\r\n                    list[j] = temp;\r\n                }\r\n            }\r\n    }\r\n    async function getPerson(ID) {\r\n        const url = APIURL + ID + APIKEY;\r\n        const resp = await fetch(url);\r\n        const respJson = await resp.json();\r\n\r\n        const oldbio = respJson.biography;\r\n        const newbio = shortenBio(oldbio);\r\n        respJson.biography = newbio;\r\n\r\n        setPerson(respJson);\r\n        console.log(person);\r\n    }\r\n    async function getCredits(ID) {\r\n        const url = APIURL + ID + \"/movie_credits\" + APIKEY;\r\n        const resp = await fetch(url);\r\n        const respJson = await resp.json();\r\n        // console.log(person);\r\n        let list;\r\n        // if ((person.known_for_department = \"Directing\")) {\r\n        //     list = respJson.crew;\r\n        // } else {\r\n        //     list = respJson.cast;\r\n        // }\r\n        const crew = respJson.crew;\r\n        const cast = respJson.cast;\r\n        let crewLen = Object.keys(crew).length;\r\n        let castLen = Object.keys(cast).length;\r\n        if (crewLen > castLen) list = crew;\r\n        else list = cast;\r\n        sortListPop(list);\r\n        let len = Object.keys(list).length;\r\n        for (let i = 10; i < len; i++) delete list[i];\r\n\r\n        setCredits(list);\r\n    }\r\n\r\n    async function getBests(ID) {\r\n        const url = APIURL + ID + \"/movie_credits\" + APIKEY;\r\n        const resp = await fetch(url);\r\n        const respJson = await resp.json();\r\n        let list;\r\n\r\n        // if ((person.known_for_department = \"Directing\")) {\r\n        //     list = respJson.crew;\r\n        // } else {\r\n        //     list = respJson.cast;\r\n        // }\r\n        const crew = respJson.crew;\r\n        const cast = respJson.cast;\r\n        let crewLen = Object.keys(crew).length;\r\n        let castLen = Object.keys(cast).length;\r\n        if (crewLen > castLen) list = crew;\r\n        else list = cast;\r\n        sortListAverage(list);\r\n        var len = Object.keys(list).length;\r\n        for (let i = 10; i < len; i++) delete list[i];\r\n\r\n        setBests(list);\r\n        console.log(bests);\r\n    }\r\n    function shortenBio(bio) {\r\n        var con = 0;\r\n        var last = bio.length;\r\n        for (let i = 0; i < bio.length; i++) {\r\n            if (bio[i] == \".\") con = con + 1;\r\n            if (con == 5) {\r\n                last = i;\r\n                break;\r\n            }\r\n        }\r\n        var newBio = bio.slice(0, last + 1);\r\n        return newBio;\r\n    }\r\n    useEffect(() => {\r\n        getPerson(currentPersonID);\r\n        getCredits(currentPersonID);\r\n        getBests(currentPersonID);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <HomeLink />\r\n            <div className=\"detail-wrapper\">\r\n                <button\r\n                    className=\"detail-button\"\r\n                    onClick={() => window.history.back()}\r\n                >\r\n                    {\" \"}\r\n                    &#8592;{\" \"}\r\n                </button>\r\n                <div className=\"movie-layout\">\r\n                    <div className=\"detail-movie-poster\">\r\n                        <img\r\n                            className=\"detail-movie-image\"\r\n                            src={IMGPATH + person.profile_path}\r\n                        />\r\n                    </div>\r\n                    <div className=\"movie-info\">\r\n                        <p className=\"movie-title\">{person.title}</p>\r\n                        <div className=\"movie-overview\">\r\n                            <p>{person.biography}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"person-movies\">\r\n                    <div className=\"person-know\">\r\n                        <p>Known for:</p>\r\n                        {Object.keys(credits).length !== 0 && (\r\n                            <Movie movies={credits} />\r\n                        )}\r\n                    </div>\r\n                    <div className=\"person-know\">\r\n                        <p>Best in:</p>\r\n                        {Object.keys(bests).length !== 0 && (\r\n                            <Movie movies={bests} />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DetailsPerson;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport \"./DetailsShow.css\";\r\nimport HomeLink from \"./HomeLink\";\r\nconst IMGPATH = \"https://image.tmdb.org/t/p/w1280\";\r\nconst APIURL = \"https://api.themoviedb.org/3/tv/\";\r\nconst APIKEY = \"?api_key=04c35731a5ee918f014970082a0088b1&page=1\";\r\nconst DetailsShow = ({ match }) => {\r\n    const [show, setShow] = useState({});\r\n    const [actors, setActors] = useState({});\r\n    const currentShowID = match.params.showID;\r\n\r\n    function streamShow() {\r\n        let url = \"https://dogeflix.net/newmov.php?menu=searchshow&query=\";\r\n        let title = show.name;\r\n\r\n        let modTitle = title.replace(/ /g, \"+\");\r\n        let newUrl = url + modTitle;\r\n        window.open(newUrl, \"_blank\").focus();\r\n    }\r\n    async function getShow(ID) {\r\n        const url = APIURL + ID + APIKEY;\r\n        const resp = await fetch(url);\r\n        const respJson = await resp.json();\r\n        setShow(respJson);\r\n        console.log(respJson);\r\n    }\r\n    async function getActors() {\r\n        const url = APIURL + currentShowID + \"/credits\" + APIKEY;\r\n        const resp = await fetch(url);\r\n        const respJson = await resp.json();\r\n        const cast = respJson.cast;\r\n        var len = Object.keys(cast).length;\r\n        for (let i = 4; i < len; i++) {\r\n            delete cast[i];\r\n        }\r\n\r\n        setActors(cast);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getShow(currentShowID);\r\n        getActors(currentShowID);\r\n    }, []);\r\n    return (\r\n        <div>\r\n            <HomeLink/>\r\n            <div className=\"detail-wrapper\">\r\n                <button\r\n                    className=\"detail-button\"\r\n                    onClick={() => window.history.back()}\r\n                >\r\n                    {\" \"}\r\n                    &#8592;{\" \"}\r\n                </button>\r\n                <div className=\"movie-layout\">\r\n                    <div className=\"detail-movie-poster\">\r\n                        <img\r\n                            className=\"detail-movie-image\"\r\n                            src={IMGPATH + show.poster_path}\r\n                        />\r\n                    </div>\r\n                    <div className=\"movie-info\">\r\n                        <p className=\"movie-title\">{show.title}</p>\r\n                        <div className=\"movie-overview\">\r\n                            <p>{show.overview}</p>\r\n                        </div>\r\n                        <div className=\"bottom-part\">\r\n                            <div className=\"movie-crew\">\r\n                                <div className=\"actors\">\r\n                                    <p className=\"actors\">\r\n                                        Actors:\r\n                                        {Object.keys(actors).length !== 0 &&\r\n                                            actors.map((actor) => (\r\n                                                <Link\r\n                                                    className=\"actor-link\"\r\n                                                    to={`/person/${actor.id}`}\r\n                                                >\r\n                                                    <p className=\"actor-link-text\">\r\n                                                        {actor.name}\r\n                                                    </p>\r\n                                                </Link>\r\n                                            ))}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"bottom-end\">\r\n                                <div className=\"movie-vote\">\r\n                                    <p className=\"movie-vote-text\">\r\n                                        {show.vote_average}\r\n                                    </p>\r\n                                </div>\r\n                                <button\r\n                                    class=\"stream-button\"\r\n                                    onClick={streamShow}\r\n                                >\r\n                                    Stream Now\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DetailsShow;\r\n","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Movie from \"./Movie\";\r\nimport \"./Popular.css\";\r\nconst APIURL =\r\n    \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=04c35731a5ee918f014970082a0088b1&page=1\";\r\n\r\nconst SEARCHAPI =\r\n    \"https://api.themoviedb.org/3/search/movie?&api_key=04c35731a5ee918f014970082a0088b1&query=\";\r\n\r\nconst Popular = () => {\r\n    const [movies, setMovies] = useState([]);\r\n    function sortList(list) {\r\n        if (!list) return;\r\n        for (let i = 0; i < 20; i++)\r\n            for (let j = i + 1; j < 20; j++) {\r\n                if (\r\n                    list[i] &&\r\n                    list[j] &&\r\n                    list[i].popularity *\r\n                        list[i].vote_average *\r\n                        list[i].number_votes <\r\n                        list[j].popularity *\r\n                            list[j].vote_average *\r\n                            list[i].number_votes\r\n                ) {\r\n                    let temp = list[i];\r\n                    list[i] = list[j];\r\n                    list[j] = temp;\r\n                }\r\n            }\r\n    }\r\n    async function getMovies(url) {\r\n        const resp = await fetch(url);\r\n        const respJson = await resp.json();\r\n        let list = respJson.results;\r\n        sortList(list);\r\n        setMovies(list);\r\n    }\r\n    useEffect(() => {\r\n        getMovies(APIURL);\r\n    }, []);\r\n    return (\r\n        <div>\r\n            <p className=\"section-title\">Most Popular Films: </p>\r\n            <div className=\"movie-grid\">\r\n                <Movie movies={movies} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Popular;\r\n","import React from \"react\";\r\nimport Movie from \"./Movie\";\r\nimport Popular from \"./Popular\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\nconst SearchView = ({ popular, movies }) => {\r\n    return (\r\n        <div>\r\n            {popular && <Popular />}\r\n            {!popular && <Movie movies={movies} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchView;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport SearchView from \"./SearchView\";\r\nimport \"./SearchBar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nconst SearchBar = () => {\r\n    const [search, setSearch] = useState(\"\");\r\n    const [movies, setMovies] = useState({});\r\n    const [active, setActive] = useState(true);\r\n    function sortList(list) {\r\n        if (!list) return;\r\n        for (let i = 0; i < 20; i++)\r\n            for (let j = i + 1; j < 20; j++) {\r\n                if (\r\n                    list[i] &&\r\n                    list[j] &&\r\n                    list[i].popularity *\r\n                        list[i].vote_average *\r\n                        list[i].number_votes <\r\n                        list[j].popularity *\r\n                            list[j].vote_average *\r\n                            list[i].number_votes\r\n                ) {\r\n                    let temp = list[i];\r\n                    list[i] = list[j];\r\n                    list[j] = temp;\r\n                }\r\n            }\r\n    }\r\n    const getMovies = async (URL) => {\r\n        const resp = await fetch(URL);\r\n        const respJson = await resp.json();\r\n        let list = respJson.results;\r\n        sortList(list);\r\n        console.log(list);\r\n        setMovies(list);\r\n    };\r\n    useEffect(() => {\r\n        const baseURL =\r\n            \"https://api.themoviedb.org/3/search/multi?with_keywords=die?sort_by=vote_average.desc&api_key=04c35731a5ee918f014970082a0088b1&page=1&query=\";\r\n        const URL = baseURL + search;\r\n        getMovies(URL);\r\n    }, [search]);\r\n    return (\r\n        <div>\r\n            <form className=\"form\" action=\"/\" method=\"get\">\r\n                <label htmlFor=\"header-search\"></label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-label\"\r\n                    id=\"header-search\"\r\n                    placeholder=\"Search movie\"\r\n                    value={search}\r\n                    onChange={(e) => {\r\n                        setSearch(e.target.value);\r\n                        console.log(e.target.value);\r\n                        if (e.target.value) setActive(false);\r\n                        else setActive(true);\r\n                    }}\r\n                />\r\n            </form>\r\n\r\n            <SearchView popular={active} movies={movies} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useEffect } from \"react\";\r\nimport HomeLink from \"./HomeLink\";\r\nimport Popular from \"./Popular\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport SearchView from \"./SearchView\";\r\n\r\nconst MainView = () => {\r\n    useEffect(() => {\r\n    }, []);\r\n    return (\r\n        <div>\r\n            <HomeLink/>\r\n            <SearchBar />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainView;\r\n","import { Route, Switch } from \"react-router\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Details from \"./components/Details\";\nimport DetailsPerson from \"./components/DetailsPerson\";\nimport DetailsShow from \"./components/DetailsShow\";\nimport MainView from \"./components/MainView\";\nimport Popular from \"./components/Popular\";\nfunction App() {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/\" exact component={MainView} />\n                <Route path=\"/movie/:movieID\" component={Details} />\n                <Route path=\"/show/:showID\" component={DetailsShow} />\n                <Route path=\"/person/:personID\" component={DetailsPerson} />\n            </Switch>\n        </BrowserRouter>\n        \n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}